{"version":3,"file":"static/js/988.2da2b71f.chunk.js","mappings":"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","sources":["components/CardBlock/styles.tsx","components/CardBlock/index.tsx","components/ContentBlock/styles.ts","components/PriceCalculator/styles.tsx","components/PriceCalculator/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const CardBlockSection = styled(\"section\")`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    \r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"div\")`\r\n  width: 140px;\r\n  height: 150px;\r\n  margin: 10px;\r\n  border: 1px solid white;\r\n  text-align: center;\r\n  padding: 13px;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { useEffect, useState } from 'react';\r\nimport { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Slide } from \"react-awesome-reveal\";\r\nimport { CardBlockSection, Content } from \"./styles\";\r\nimport Papa from 'papaparse';\r\n\r\ninterface CardBlockProps {\r\n  t: TFunction;\r\n}\r\n\r\nconst MAX_NUM = 53;\r\nconst OFFSET = Math.max(0, Math.round((new Date(\"03/20/2025\").getTime() - new Date().getTime())/ (1000 * 3600 * 24)));\r\n\r\nfunction getColor(numberRemaining: number){\r\n  if(numberRemaining === 0)\r\n    return '#282c34';\r\n  if(numberRemaining < 10)\r\n    return '#eb9694';\r\n  if(numberRemaining < 20)\r\n    return '#fef3bd'; \r\n  return '#c1e1c5'; \r\n}\r\n\r\nfunction getTextColor(numberRemaining : number){\r\n  if(numberRemaining === 0)\r\n    return '#ffffff';\r\n  return undefined; \r\n}\r\n\r\nfunction getSettimanaDescription(index : number){\r\n  if(index === 1)\r\n    return '9 giugno\\n13 giugno';\r\n  if(index === 2)\r\n    return '16 giugno\\n20 giugno';\r\n  if(index === 3)\r\n    return '23 giugno\\n27 giugno';\r\n  if(index === 4)\r\n    return '30 giugno\\n4 luglio';\r\n  if(index === 5)\r\n    return '7 luglio\\n11 luglio';\r\n  if(index === 6)\r\n    return '14 luglio\\n18 luglio';\r\n  if(index === 7)\r\n    return '21 luglio\\n25 luglio';\r\n  return '';\r\n}\r\n\r\nconst CardBlock = ({ t }: CardBlockProps) => {\r\n  const [cardData, setCardData] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    // fetch data\r\n    const dataFetch = async () => {\r\n      var res = await (\r\n        await fetch(\r\n          'https://docs.google.com/spreadsheets/d/e/2PACX-1vR8lYl1nsSky2wAyXJPdIzWyxrLqKYX8GAAPNdavVFDv-VHhzi9hQcgp8n85aUp5UCak91xEnh_NGGL/pub?gid=574938590&single=true&output=csv'\r\n        )\r\n      ).blob().then(b => b.text());\r\n\r\n      type WeekDashboard = {\r\n        S1: number;\r\n        S2: number;\r\n        S3: number;\r\n        S4: number;\r\n        S5: number;\r\n        S6: number;\r\n        S7: number;\r\n      };\r\n\r\n      const results = Papa.parse<WeekDashboard>(res, {\r\n        dynamicTyping: true,\r\n        header: true,\r\n        skipEmptyLines: true,\r\n      });\r\n\r\n      if(results?.data[0]){\r\n        const data = [results.data[0]['S1'],\r\n         results.data[0]['S2'],\r\n         results.data[0]['S3'],\r\n         results.data[0]['S4'],\r\n         results.data[0]['S5'],\r\n         results.data[0]['S6'],\r\n         results.data[0]['S7']];\r\n        setCardData(data);\r\n      }\r\n    };\r\n\r\n    dataFetch();\r\n  }, []);\r\n\r\n  return (\r\n    <CardBlockSection>\r\n      {cardData.map((card, index) => (\r\n        <Content style={{backgroundColor: getColor(MAX_NUM - card - OFFSET), color: getTextColor(MAX_NUM - card - OFFSET)}}>\r\n          <h6 style={{fontSize: '15px'}}>Settimana {index + 1}</h6>\r\n          <div style={{whiteSpace: 'pre-line', color: getTextColor(MAX_NUM - card - OFFSET)}}>\r\n            {getSettimanaDescription(index + 1)}\r\n          </div>\r\n          <div>\r\n            Posti rimanenti <br/> <span style={{fontWeight: 'bold'}}>{MAX_NUM - card - OFFSET}</span> / {MAX_NUM}\r\n          </div>\r\n        </Content>\r\n      ))}\r\n    </CardBlockSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(CardBlock);\r\n","import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 2rem 0 2rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 1.5rem 0 1.5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 1rem 0 0;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const Content2 = styled(\"p\")`\r\n  margin: 1rem 0 1rem 0;\r\n  font-size: 18px\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const NotePara = styled(\"p\")`\r\n  font-size: 11px;\r\n  margin-bottom: 0.5em;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n  margin: 1.5rem 0 2rem 0;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PriceCalculatorSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 4rem 0 4rem;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const PriceCalculatorPriceValue = styled(\"div\")`\r\n  min-height: 170px;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n   min-height: 100px;\r\n  }\r\n`;\r\n","import { Col, Slider, InputNumberProps, SliderSingleProps } from \"antd\";\r\nimport { useState } from 'react';\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { PriceCalculatorPriceValue } from \"./styles\";\r\n\r\nconst formatter: NonNullable<SliderSingleProps['tooltip']>['formatter'] = (value) => `${value} ${value === 1 ? \"settimana\" : \"settimane\"}`;\r\n\r\n\r\nconst PriceCalculator = () => {\r\n  const [inputValue, setInputValue] = useState(1);\r\n\r\n  const onChange: InputNumberProps['onChange'] = (newValue) => {\r\n    setInputValue(newValue as number);\r\n  };\r\n\r\n  return (\r\n    <Col style={{alignItems: \"center\", marginTop: \"2em\"}}>\r\n      <Slider\r\n        min={1}\r\n        max={7}\r\n        onChange={onChange}\r\n        value={typeof inputValue === 'number' ? inputValue : 0}\r\n        tooltip={{ formatter }}\r\n        handleStyle={{width: \"2.5em\", height: \"2.5em\", marginTop: \"-1em\"}}\r\n      />\r\n      <PriceCalculatorPriceValue>\r\n        <h6 style={{textDecoration : inputValue > 3 ? \"line-through\" : \"none\", textAlign: \"center\"}}>{inputValue * 130 + \" €\"}</h6>\r\n        {inputValue > 3 && <h6 style={{textAlign: \"center\"}}>{inputValue > 6 ?  inputValue * 110 : inputValue * 120 }{\" €\"}</h6>}\r\n      </PriceCalculatorPriceValue>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(PriceCalculator);\r\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport CardBlock from \"../CardBlock\";\r\n\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  Content2,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n  NotePara\r\n} from \"./styles\";\r\nimport PriceCalculator from \"../PriceCalculator\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n  cards,\r\n  priceCalculator,\r\n  notes\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          {!cards && !priceCalculator && <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n            {/* !cards && <img src=\"https://i.ibb.co/TKvrMsq/Logo-CRE.png\" width=\"100%\" height=\"100%\"/>*/}\r\n          </Col>}\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{title}</h6>\r\n              <Content>{content}</Content>\r\n              {cards && <Content2>\r\n                <span style={{marginBottom: 0}}>Per l’iscrizione prepara: </span>\r\n                <ul>\r\n                  <li>documento di identità tuo e dei delegati</li>\r\n                  <li>⁠tessera sanitaria con codice fiscale visibile</li>\r\n                  <li>ricevuta del bonifico in formato PDF</li>\r\n                  <li>⁠libretto dello sportivo valido per la durata di frequenza del centro estivo</li>\r\n                </ul>\r\n                </Content2>}\r\n                {button && <ButtonWrapper>\r\n                  {typeof button === \"object\" &&\r\n                    button.map(\r\n                      (\r\n                        item: {\r\n                          color?: string;\r\n                          title: string;\r\n                          disabled?: boolean;\r\n                          href?: string;\r\n                        },\r\n                        id: number\r\n                      ) => {\r\n                        return (\r\n                          <Button\r\n                            key={id}\r\n                            color={item.color}\r\n                            disabled={item.disabled}\r\n                            onClick={()=> item.href ? window.open(item.href, \"_blank\") : {}}\r\n                          >\r\n                            {t(item.title)}\r\n                          </Button>\r\n                        );\r\n                      }\r\n                    )}\r\n                </ButtonWrapper>}\r\n                {section &&<ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {typeof section === \"object\" &&\r\n                      section.map(\r\n                        (\r\n                          item: {\r\n                            title: string;\r\n                            content: string;\r\n                            icon: string;\r\n                          },\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Col key={id} span={7}>\r\n                              <SvgIcon\r\n                                src={item.icon}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                              />\r\n                              <MinTitle>{t(item.title)}</MinTitle>\r\n                              <MinPara>{t(item.content)}</MinPara>\r\n                            </Col>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </Row>\r\n                  <Col>\r\n                    {typeof notes === \"object\" &&\r\n                      notes.map(\r\n                        (\r\n                          item: string,\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <NotePara>{item}</NotePara>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </Col>\r\n                </ServiceWrapper>}\r\n            </ContentWrapper>\r\n          </Col>\r\n          {(cards || priceCalculator) && <Col lg={11} md={11} sm={12} xs={24}>\r\n            {cards && <CardBlock />}\r\n            {priceCalculator && <PriceCalculator />}\r\n          </Col>}\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["CardBlockSection","styled","Content","OFFSET","Math","max","round","Date","getTime","getTextColor","numberRemaining","getSettimanaDescription","index","withTranslation","_ref","t","cardData","setCardData","useState","useEffect","async","res","fetch","blob","then","b","text","results","Papa","dynamicTyping","header","skipEmptyLines","data","dataFetch","_jsx","children","map","card","_jsxs","style","backgroundColor","color","fontSize","whiteSpace","fontWeight","ContentSection","Content2","StyledRow","Row","direction","ContentWrapper","ServiceWrapper","MinTitle","MinPara","NotePara","ButtonWrapper","PriceCalculatorPriceValue","formatter","value","PriceCalculator","inputValue","setInputValue","Col","alignItems","marginTop","Slider","min","onChange","newValue","tooltip","handleStyle","width","height","textDecoration","textAlign","icon","title","content","section","button","id","cards","priceCalculator","notes","Fade","triggerOnce","justify","align","lg","md","sm","xs","SvgIcon","src","marginBottom","item","Button","disabled","onClick","href","window","open","span","CardBlock"],"sourceRoot":""}